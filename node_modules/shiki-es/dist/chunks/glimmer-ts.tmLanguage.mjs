const $schema = "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json";
const name = "glimmer-ts";
const scopeName = "source.gts";
const patterns = [
	{
		include: "source.ts"
	}
];
const injections = {
	"L:source.gts -comment": {
		patterns: [
			{
				name: "meta.js.embeddedTemplateWithoutArgs",
				begin: "\\s*(<)(template)\\s*(>)",
				beginCaptures: {
					"1": {
						name: "punctuation.definition.tag.html"
					},
					"2": {
						name: "entity.name.tag.other.html"
					},
					"3": {
						name: "punctuation.definition.tag.html"
					}
				},
				end: "(</)(template)(>)",
				endCaptures: {
					"1": {
						name: "punctuation.definition.tag.html"
					},
					"2": {
						name: "entity.name.tag.other.html"
					},
					"3": {
						name: "punctuation.definition.tag.html"
					}
				},
				patterns: [
					{
						include: "text.html.handlebars"
					}
				]
			},
			{
				name: "meta.js.embeddedTemplateWithArgs",
				begin: "(<)(template)",
				beginCaptures: {
					"1": {
						name: "punctuation.definition.tag.html"
					},
					"2": {
						name: "entity.name.tag.other.html"
					}
				},
				end: "(</)(template)(>)",
				endCaptures: {
					"1": {
						name: "punctuation.definition.tag.html"
					},
					"2": {
						name: "entity.name.tag.other.html"
					},
					"3": {
						name: "punctuation.definition.tag.html"
					}
				},
				patterns: [
					{
						begin: "(?<=\\<template)",
						end: "(?=\\>)",
						patterns: [
							{
								include: "text.html.handlebars#tag-stuff"
							}
						]
					},
					{
						begin: "(>)",
						beginCaptures: {
							"1": {
								name: "punctuation.definition.tag.end.js"
							}
						},
						end: "(?=</template>)",
						contentName: "meta.html.embedded.block",
						patterns: [
							{
								include: "text.html.handlebars"
							}
						]
					}
				]
			}
		]
	}
};
const glimmerTs_tmLanguage = {
	$schema: $schema,
	name: name,
	scopeName: scopeName,
	patterns: patterns,
	injections: injections
};

export { $schema, glimmerTs_tmLanguage as default, injections, name, patterns, scopeName };
